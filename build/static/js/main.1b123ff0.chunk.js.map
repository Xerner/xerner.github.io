{"version":3,"sources":["components/Pixel.tsx","components/PixelBitmap.tsx","graphics/bitmaps/alphabetMap.js","components/Portfolio.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Pixel","props","useState","hidden","setHidden","useEffect","setTimeout","wait","style","width","pixelSize","height","backgroundColor","fill","position","paddingTop","y","left","x","top","PixelBitmap","bitmap","colormap","className","rowDelay","random","other","rows","length","delay","map","row","rowIndex","bit","index","Math","className2","Array","isArray","floor","alphabet","a","d","K","e","n","t","h","M","animation","colorMap","0","1","2","Portfolio","fillerSize","setFillerSize","Grid","container","justify","spacing","item","alignItems","Typography","variant","align","color","padding","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","SimpleTabs","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAae,SAASA,EAAMC,GAC5B,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAYA,OAVAC,qBAAU,WACRC,YAAW,WACTF,GAAU,KACTH,EAAMM,MAAQ,MAOXJ,EAcN,6BAbA,iCACEK,MAAO,CACLC,MAAOR,EAAMS,UACbC,OAAQV,EAAMS,UACdE,gBAAiBX,EAAMY,KAC3BC,SAAU,WACVC,WAAwB,IAAZd,EAAMe,GAAWf,EAAMS,UAAY,EAC/CO,KAAMhB,EAAMiB,EAAIjB,EAAMS,UACtBS,IAAKlB,EAAMe,EAAIf,EAAMS,YAElBT,I,wECvBQ,SAASmB,EAAYnB,GAClC,IAAQoB,EAAsEpB,EAAtEoB,OAAQX,EAA8DT,EAA9DS,UAAWY,EAAmDrB,EAAnDqB,SAAUC,EAAyCtB,EAAzCsB,UAAWC,EAA8BvB,EAA9BuB,SAAUC,EAAoBxB,EAApBwB,OAAWC,EAArE,YAA8EzB,EAA9E,GACM0B,EAAON,EAAOO,OAEdnB,EADUY,EAAO,GAAGO,OACFlB,EAClBC,EAASgB,EAAOjB,EAClBmB,EAAQL,EAAW,EAAIA,EAAW,EAEtC,OACE,6CAAKhB,MAAO,CAACC,MAAOA,EAAOE,OAAQA,EAAQG,SAAU,aAAiBY,GAAtE,aACGL,EAAOS,KAAI,SAACC,EAAeC,GAC1B,OAAOD,EAAID,KAAI,SAACG,EAAaC,GACvBV,IACEC,EACFI,EAAQL,EAAWW,KAAKV,SAExBI,GAASL,GAGb,IAAIY,EAAaC,MAAMC,QAAQf,GAAaA,EAAUY,KAAKI,MAAMJ,KAAKV,SAAWF,EAAUK,SAAWL,EACtG,OACE,cAACvB,EAAD,CAEEkB,EAAGgB,EACHlB,EAAGgB,EACHtB,UAAWA,EACXG,KAAMS,EAASW,GACf1B,KAAMsB,EACNN,UACEA,GAAa,qBAAuBa,GAPjCF,YCpCnB,IA2GeM,EA3GE,CACfC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EAAG,IAE1BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAErBC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAA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","file":"static/js/main.1b123ff0.chunk.js","sourcesContent":["import { CSSProperties, ReactEventHandler, useEffect, useState } from \"react\";\r\nimport { clearTimeout } from \"timers\";\r\n\r\ninterface PixelProps {\r\n  x: number;\r\n  y: number;\r\n  pixelSize: number;\r\n  fill: string;\r\n  className?: string;\r\n  style?: object;\r\n  wait?: number;\r\n}\r\n\r\nexport default function Pixel(props: PixelProps) {\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setHidden(false);\r\n    }, props.wait || 0);\r\n    // return () => {\r\n    // \tclearTimeout(timer);\r\n    // }\r\n  });\r\n\r\n  // return !hidden ? <rect width=\"1\" height=\"1\" shapeRendering=\"crispEdges\" {...props} /> : <></>;\r\n  return !hidden ? (\r\n    <div\r\n      style={{\r\n        width: props.pixelSize,\r\n        height: props.pixelSize,\r\n        backgroundColor: props.fill,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tpaddingTop: props.y !== 0 ? -props.pixelSize : 0,\r\n\t\t\t\tleft: props.x * props.pixelSize,\r\n\t\t\t\ttop: props.y * props.pixelSize,\r\n      }}\r\n\t\t\t{...props}\r\n    />\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n","import Svg from \"./Svg\";\r\nimport Pixel from \"./Pixel\";\r\nimport React from \"react\";\r\n\r\ninterface PixelProps {\r\n  bitmap: number[][];\r\n  pixelSize: number;\r\n  colormap: { [key: number]: string };\r\n  animate?: boolean;\r\n  className?: string | string[];\r\n  rowDelay?: number;\r\n  random?: boolean;\r\n}\r\n\r\nexport default function PixelBitmap(props: PixelProps) {\r\n  const { bitmap, pixelSize, colormap, className, rowDelay, random, ...other} = props;\r\n  const rows = bitmap.length;\r\n  const columns = bitmap[0].length;\r\n  const width = columns * pixelSize;\r\n  const height = rows * pixelSize;\r\n  var delay = rowDelay ? 1 + rowDelay : 0;\r\n\r\n  return (\r\n    <div style={{width: width, height: height, position: \"relative\"}} {...other}>\r\n      {bitmap.map((row: number[], rowIndex: number) => {\r\n        return row.map((bit: number, index: number) => {\r\n          if (rowDelay) {\r\n            if (random) {\r\n              delay = rowDelay * Math.random();\r\n            } else {\r\n              delay += rowDelay;\r\n            }\r\n          }\r\n          var className2 = Array.isArray(className) ? className[Math.floor(Math.random() * className.length)] : className;\r\n          return (\r\n            <Pixel\r\n              key={index}\r\n              x={index}\r\n              y={rowIndex}\r\n              pixelSize={pixelSize}\r\n              fill={colormap[bit]}\r\n              wait={delay}\r\n              className={\r\n                className && \"animate__animated \" + className2\r\n              }\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </div>\r\n    // <Svg width={240} height={320} viewBox={`0 0 ${rows} ${columns}`}>\r\n    //   {bitmap.map((row: number[], rowIndex: number) => {\r\n    //     return row.map((bit: number, index: number) => {\r\n    //       if (rowDelay) delay += rowDelay;\r\n    //       var className2 = Array.isArray(className) ? className[rowIndex][index] : className;\r\n    //       return (\r\n    //         <Pixel\r\n    //           key={index}\r\n    //           x={index}\r\n    //           y={rowIndex}\r\n    //           fill={colormap[bit]}\r\n    //           wait={delay}\r\n    //           className={\r\n    //             className && \"animate__animated \" + className2\r\n    //           }\r\n    //         />\r\n    //       );\r\n    //     });\r\n    //   })}\r\n    // </Svg>\r\n  );\r\n}\r\n","const alphabet = {\r\n  a: [\r\n    [0, 0, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 2, 1, 1, 2, 0],\r\n    [1, 1, 2, 2, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 0, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 2, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 0, 2, 2, 2, 2, 2, 2, 2],\r\n  ],\r\n  d: [\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 2, 1, 1, 2, 0],\r\n    [1, 1, 2, 2, 0, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 0, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 2, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 0, 2, 2, 2, 2, 2, 2, 2],\r\n  ],\r\n  K: [\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 1, 1, 1, 2],\r\n    [1, 1, 2, 0, 1, 1, 1, 2, 2],\r\n    [1, 1, 2, 1, 1, 1, 2, 2, 0],\r\n    [1, 1, 1, 1, 1, 2, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 2, 0, 0, 0],\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 2, 2, 1, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 2, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n  e: [\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 2, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 2, 0, 2, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 2],\r\n    [1, 1, 2, 2, 2, 2, 2, 2, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 2, 2, 2, 2, 2, 2, 2, 0],\r\n  ],\r\n  n: [\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2,2, 2],\r\n  ],\r\n  t: [\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 2],\r\n    [2, 2, 1, 1, 2, 2, 2],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 1, 2, 0],\r\n    [0, 0, 2, 1, 1, 2, 0],\r\n    [0, 0, 0, 2, 2, 2, 0],\r\n  ],\r\n  h: [\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 2, 1, 1, 1, 2],\r\n    [1, 1, 1, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 2, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n  M: [\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 1, 2, 0, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 2, 1, 1, 2, 1, 1, 2],\r\n    [1, 1, 2, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n};\r\n\r\nexport default alphabet;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PixelBitmap from \"./PixelBitmap\";\r\nimport alphabet from '../graphics/bitmaps/alphabetMap.js';\r\n\r\nvar animation = [\r\n  \"animate__fadeInRightBig\",\r\n  \"animate__fadeInLeftBig\",\r\n  \"animate__fadeInUpBig\",\r\n  \"animate__fadeInDownBig\",\r\n];\r\n// const animation = \"animate__fadeInDownBig\";\r\n// const animation = \"animate__slow animate__backInLeft\";\r\n// const animation = \"animate__flip\";\r\n// const animation = \"animate__fadeInBottomLeft\";\r\n// const animation = \"animate__faster animate__flipInY\";\r\n\r\nconst colorMap: { [key: number]: string } = {\r\n  0: \"#00000000\",\r\n  1: \"#5f5fc4\",\r\n  2: \"#001064\",\r\n};\r\n\r\nexport default function Portfolio() {\r\n  const [hidden, setHidden] = useState(true);\r\n  const [fillerSize, setFillerSize] = useState(300);\r\n\r\n  setTimeout(() => {\r\n    setHidden(false);\r\n    setFillerSize(100);\r\n    animation = [\"\"];\r\n  }, 4000);\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <div className=\"transition\" style={{height: fillerSize}}></div>\r\n      <Grid container justify=\"center\" spacing={10} className=\"transition\">\r\n        <Grid item>\r\n          <Grid container justify=\"center\" spacing={2} alignItems=\"baseline\">\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.K} pixelSize={20} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.e} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.n} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.n} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.e} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.t} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.h} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container justify=\"center\" spacing={2} alignItems=\"baseline\">\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.M} pixelSize={20} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.e} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.a} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n            <Grid item>\r\n              <PixelBitmap bitmap={alphabet.d} pixelSize={10} colormap={colorMap} className={animation} rowDelay={10} random/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {\r\n        !hidden && \r\n        <div className=\"animate__animated animate__fadeInUpBig\">\r\n          <Typography variant=\"h3\" align=\"center\" color=\"primary\" style={{ padding: \"6rem\" }}>\r\n            Projects\r\n          </Typography>\r\n        </div>\r\n\r\n      }\r\n    </div>\r\n    // <Box m={6}>\r\n    //   <Grid container justify=\"center\" spacing={2}>\r\n    //     <Grid item>\r\n    //       <PixelBitmap bitmap={K} colormap={colorMap} className={animation} rowDelay={10}/>\r\n    //     </Grid>\r\n    //     <Grid item>\r\n    //       <PixelBitmap bitmap={M} colormap={colorMap} className={animation} rowDelay={10}/>\r\n    //     </Grid>\r\n    //   </Grid>\r\n    //   <Typography variant=\"h5\" align=\"center\" style={{ padding: \"6rem\" }}>\r\n    //     Projects\r\n    //   </Typography>\r\n    // </Box>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport 'animate.css';\nimport React, { useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { createMuiTheme, Switch, ThemeProvider, Toolbar } from \"@material-ui/core\";\n// import Post from \"./components/Post\";\n// import UserType from \"./types/UserType\";\nimport Portfolio from \"./components/Portfolio\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#5f5fc4\",\n      main: \"#283593\",\n      dark: \"#001064\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      light: \"#b2fef7\",\n      main: \"#80cbc4\",\n      dark: \"#4f9a94\",\n      contrastText: \"#000000\",\n    },\n  },\n});\n\n// const useFetch = function (url: string): [[any] | null, boolean] {\n//   const [data, setData] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   useEffect(() => {\n//     fetchData(url, (data) => {\n//       setData(data);\n//       setLoading(false);\n//     });\n//   }, [url]);\n//   return [data, loading];\n// };\n\nasync function fetchData(\n  url: string,\n  callback: React.Dispatch<React.SetStateAction<null>>\n) {\n  const response = await fetch(url);\n  const json = await response.json();\n  callback(json);\n}\n\nexport default function SimpleTabs() {\n  const [value, setValue] = useState(0);\n  const [darkMode, setDarkMode] = useState(false);\n  \n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Portfolio />\n    </ThemeProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}