{"version":3,"sources":["components/Languages.tsx","components/ProjectCard.tsx","functions/isMobile.ts","graphics/bitmaps/alphabetMap.tsx","components/Pixel.tsx","components/PixelBitmap.tsx","components/PixelWord.tsx","components/PixelSentence.tsx","components/MyName.tsx","hooks/useIsDarkMode.ts","context.ts","components/DarkModeControl.tsx","components/Controls.tsx","hooks/useCookie.ts","components/ProjectCardContainer.tsx","App.tsx","themes/neonTheme.ts","reportWebVitals.ts","index.tsx"],"names":["languageColors2","languageColors","useStyles","makeStyles","theme","createStyles","ul","listStyle","paddingLeft","margin","marginTop","a","alignItems","linkSecondary","color","palette","type","grey","progress","height","borderRadius","overflow","display","backgroundColor","fetchLanguages","repoName","repoOwner","fetch","headers","Authorization","token","readonlyToken","substring","json","Languages","props","languages","useAsync","classes","useTheme","loading","Typography","style","fontStyle","error","undefined","result","message","languageNames","Object","keys","maxvalue","arr","sum","forEach","value","values","percentages","map","val","percentagesStr","percentage","Math","log10","toPrecision","toString","percentBars","className","index","width","languageDots","name","fill","hasOwnProperty","viewBox","version","fillRule","d","root","background","paper","border","primary","main","details","flex","flexDirection","title","fontSize","actions","borderLeft","dark","chips","flexWrap","spacing","paddingTop","paddingBottom","useCardMediaStyles","media","objectFit","top","ProjectCard","repo","subtitle","desc","isPrivate","image","iconButtons","cardMediaClasses","Card","CardContent","variant","component","chip","Chip","size","label","owner","CardMedia","alt","url","Box","align","Grid","container","direction","iconButton","item","isMobile","test","navigator","userAgent","alphabet","K","e","n","t","h","M","Pixel","x","y","pixelsize","animationClasses","wait","useState","hidden","setHidden","useEffect","setTimeout","ref","React","createRef","onAnimationEnd","current","position","left","PixelBitmap","bitmap","colormap","rowDelay","rowDelayMaxIncrement","random","other","rows","length","useMemo","delay","row","rowIndex","bit","increment","animationClasses2","Array","isArray","floor","PixelWord","word","upperCaseSize","lowerCaseSize","colorMap","split","char","PixelSentence","sentence","wordSpacing","letterSpacing","wordProps","sentenceArr","justifyContent","animations","MyName","playAnimation","setRowDelay","isDarkMode","isMobile_","wordSpacing_","letterSpacing_","animationObj","padding","isMobileContext","createContext","DarkModeControl","onClick","useContext","setIsDarkMode","Tooltip","src","cursor","Controls","setDarkMode","useCookie","initialValue","options","useCookies","cookies","setVanillaCookie","cookie","setInternalCookie","internalOptions","setInternalOptions","setCookie","newCookie","typedCookie","CookieAlreadySet","parseInt","newOptions","console","log","projectCardContainer","Color","default","fade","overflowY","overflowX","content","minHeight","maxHeight","window","innerHeight","zIndex","rowNumber","textAlign","ProjectCardContainer","children","Container","maxWidth","Children","child","xs","App","useMediaQuery","maxAge","darkMode","hasPixelFont","setHasPixelFont","hideOverflow","setHideOverflow","setPlayAnimation","hideContent","setHideContent","createTheme","light","lighten","darken","contrastText","secondary","text","neonTheme","document","body","classList","add","getElementById","ThemeProvider","CssBaseline","arrow","IconButton","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BwD,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EAAG,IAE1BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EA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","file":"static/js/main.760de5b5.chunk.js","sourcesContent":["import { useTheme } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { useAsync } from 'react-async-hook';\r\nimport languageColors from '../config/languageColors.json';\r\nimport token from '../config/token.json';\r\n\r\nconst languageColors2: { [str: string]: string } = languageColors;\r\n\r\nexport interface IGithubRepo {\r\n  repoName: string;\r\n  repoOwner: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    ul: {\r\n      listStyle: 'none  !important',\r\n      paddingLeft: 0,\r\n      margin: 0,\r\n      marginTop: '8px'\r\n    },\r\n    a: {\r\n      alignItems: 'center'\r\n    },\r\n    linkSecondary: {\r\n      color: theme.palette.type === 'dark' ? theme.palette.grey[400] : theme.palette.grey[500]\r\n    },\r\n    progress: {\r\n      height: 8,\r\n      borderRadius: 6,\r\n      overflow: 'hidden',\r\n      display: 'flex',\r\n      backgroundColor: theme.palette.grey[700]\r\n    }\r\n  })\r\n);\r\n\r\nconst fetchLanguages = async (repoName: string, repoOwner: string) =>\r\n  (\r\n    await fetch(`https://api.github.com/repos/${repoOwner}/${repoName}/languages`, {\r\n      headers: {\r\n        Authorization: `token ${'g' + token.readonlyToken.substring(2)}`\r\n      }\r\n    })\r\n  ).json();\r\n\r\nexport default function Languages(props: IGithubRepo) {\r\n  const { repoName, repoOwner } = props;\r\n  const languages = useAsync(fetchLanguages, [repoName, repoOwner]);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  if (languages.loading) {\r\n    return (\r\n      <>\r\n        <Typography color=\"textSecondary\" style={{ fontStyle: 'italic' }}>\r\n          Loading\r\n        </Typography>\r\n      </>\r\n    );\r\n  } else if (languages.error) {\r\n    return (\r\n      <>\r\n        <Typography color=\"textSecondary\" style={{ fontStyle: 'italic' }}>\r\n          Error fetching languages\r\n        </Typography>\r\n      </>\r\n    );\r\n  } else if (languages.result.message !== undefined) {\r\n    return (\r\n      <>\r\n        <Typography color=\"textSecondary\" style={{ fontStyle: 'italic' }}>\r\n          Repository: {languages.result.message}\r\n        </Typography>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const languageNames = Object.keys(languages.result);\r\n  const maxvalue = sum(Object.values(languages.result));\r\n  const percentages = Object.values<number>(languages.result).map((val: number) =>\r\n    val === 0 ? 0 : (val / maxvalue) * 100\r\n  );\r\n  const percentagesStr = percentages.map((percentage: number) =>\r\n    Math.log10(percentage) < 2 ? percentage.toPrecision(2) : percentage.toString()\r\n  );\r\n\r\n  const percentBars = (\r\n    <div>\r\n      <span className={classes.progress}>\r\n        {percentages.map((percentage: number, index: number) => (\r\n          <span\r\n            key={index}\r\n            style={{\r\n              width: `${percentage}%`,\r\n              backgroundColor: languageColors2[languageNames[index]]\r\n            }}\r\n          />\r\n        ))}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  const languageDots = (\r\n    <ul className={classes.ul}>\r\n      {languageNames.map((name: string, index: number) => (\r\n        <li className=\"d-inline\" key={index}>\r\n          <div className=\"flex-items-center d-inline-flex me-3\">\r\n            <svg\r\n              className=\"octicon me-2\"\r\n              fill={\r\n                languageColors2.hasOwnProperty(name)\r\n                  ? languageColors2[name]\r\n                  : theme.palette.type === 'dark'\r\n                  ? '#fff'\r\n                  : theme.palette.grey[400]\r\n              }\r\n              viewBox=\"0 0 16 16\"\r\n              version=\"1.1\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path>\r\n            </svg>\r\n            <span className=\"fw-bold me-1\">{name}</span>\r\n            <span className={classes.linkSecondary}>{percentagesStr[index]}%</span>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {percentBars}\r\n      {languageDots}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction sum(arr: number[]): number {\r\n  var sum: number = 0;\r\n  arr.forEach((value) => (sum += value));\r\n  return sum;\r\n}\r\n","import { Box, CardMedia, Chip, Grid, Typography } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\n// import CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Languages from './Languages';\r\n// import { animated, useSpring } from 'react-spring';\r\n// import { useState } from 'react';\r\n\r\ninterface IProjectCard {\r\n  isPrivate?: boolean;\r\n  repo: IProjectCardRepo;\r\n  name: string;\r\n  subtitle?: string;\r\n  chips: string[];\r\n  desc: JSX.Element | string;\r\n  image?: IProjectCardImage;\r\n  iconButtons?: JSX.Element[];\r\n}\r\n\r\ninterface IProjectCardImage {\r\n  url: string;\r\n  alt?: string;\r\n  title?: string;\r\n  imageFit?: 'fill' | 'contain' | 'cover' | 'none' | 'scale-down';\r\n}\r\n\r\ninterface IProjectCardRepo {\r\n  name: string;\r\n  owner: string;\r\n}\r\n\r\n//const CARD_WIDTH = 576;\r\nconst CARD_HEIGHT = '100%'; // 200;\r\nconst CONTENT_WIDTH = '60%';\r\n// const IMAGE_HEIGHT = 400;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      // borderBottom: `4px solid ${\r\n      //   theme.palette.type === 'dark' ? 'purple' : theme.palette.primary.light\r\n      // }`,\r\n      border: `1px solid ${theme.palette.primary.main}`,\r\n      height: CARD_HEIGHT,\r\n      display: 'flex',\r\n      width: '100%'\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flex: 2,\r\n      flexDirection: 'column',\r\n      width: CONTENT_WIDTH\r\n    },\r\n    title: {\r\n      fontSize: 24\r\n      // marginBottom: 4\r\n    },\r\n    languages: {\r\n      backgroundColor:\r\n        theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[100]\r\n    },\r\n    actions: {\r\n      flex: 0,\r\n      borderLeft: `1px solid ${theme.palette.primary.dark}`\r\n    },\r\n    chips: {\r\n      display: 'flex',\r\n      // justifyContent: 'flex-start',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5)\r\n      },\r\n      paddingTop: 0,\r\n      paddingBottom: 4\r\n    }\r\n  })\r\n);\r\n\r\nconst useCardMediaStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    media: {\r\n      borderLeft: `1px solid ${theme.palette.primary.dark}`,\r\n      width: 400,\r\n      objectFit: 'contain',\r\n      top: '50%'\r\n    }\r\n  })\r\n);\r\n\r\n// const AnimatedCard = animated(Card);\r\n\r\nexport default function ProjectCard(props: IProjectCard) {\r\n  const { repo, name, subtitle, chips, desc, isPrivate, image, iconButtons } = props;\r\n  const classes = useStyles();\r\n  const cardMediaClasses = useCardMediaStyles();\r\n\r\n  return (\r\n    <Card className={classes.root + ' shadow-split'}>\r\n      <div className={classes.details}>\r\n        <CardContent>\r\n          {/* Title */}\r\n          <Typography className={classes.title}>{name}</Typography>\r\n\r\n          {/* Subtitle */}\r\n          {subtitle !== undefined && subtitle !== '' && (\r\n            <Typography className=\"mb-2\" color=\"textSecondary\">\r\n              {subtitle}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* Desc */}\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {desc}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        {/* Chips */}\r\n        <CardContent className={classes.chips}></CardContent>\r\n\r\n        {/* Languages & Chips */}\r\n        <CardContent className={classes.languages}>\r\n          <div className={classes.chips}>\r\n            {chips.map((chip, index) => (\r\n              <Chip key={index} size=\"small\" label={chip} />\r\n            ))}\r\n          </div>\r\n          {isPrivate !== undefined ? (\r\n            <Languages repoName={repo.name} repoOwner={repo.owner} />\r\n          ) : (\r\n            <Typography variant=\"body1\" color=\"textSecondary\" style={{ fontStyle: 'italic' }}>\r\n              Private repository\r\n            </Typography>\r\n          )}\r\n        </CardContent>\r\n      </div>\r\n      {image ? (\r\n        <CardMedia\r\n          component=\"img\"\r\n          // className={classes.media}\r\n          classes={cardMediaClasses}\r\n          alt={image.alt}\r\n          image={image.url}\r\n          title={image.title}\r\n        />\r\n      ) : (\r\n        <Box style={{ height: 140, paddingTop: 70 }}>\r\n          <Typography color=\"textSecondary\" align=\"center\">\r\n            No Image\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {iconButtons !== undefined && (\r\n        <Grid container direction=\"column\" className={classes.actions}>\r\n          {iconButtons.map((iconButton, index) => (\r\n            <Grid item key={index}>\r\n              {iconButton}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","\r\nexport function isMobile() {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\r\n}","interface IDictionary {\r\n  [index: string]: number[][];\r\n}\r\n\r\nconst alphabet: IDictionary = {\r\n  a: [\r\n    [0, 0, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 2, 1, 1, 2, 0],\r\n    [1, 1, 2, 2, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 0, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 2, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 0, 2, 2, 2, 2, 2, 2, 2],\r\n  ],\r\n  d: [\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 2, 1, 1, 2, 0],\r\n    [1, 1, 2, 2, 0, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 0, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 2, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 0, 2, 2, 2, 2, 2, 2, 2],\r\n  ],\r\n  K: [\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 1, 1, 1, 2],\r\n    [1, 1, 2, 0, 1, 1, 1, 2, 2],\r\n    [1, 1, 2, 1, 1, 1, 2, 2, 0],\r\n    [1, 1, 1, 1, 1, 2, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 2, 0, 0, 0],\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 2, 2, 1, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 2, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n  e: [\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 2, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 2, 0, 2, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 2],\r\n    [1, 1, 2, 2, 2, 2, 2, 2, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 2, 2, 2, 2, 2, 2, 2, 0],\r\n  ],\r\n  n: [\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2,2, 2],\r\n  ],\r\n  t: [\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 2],\r\n    [2, 2, 1, 1, 2, 2, 2],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 1, 2, 0],\r\n    [0, 0, 2, 1, 1, 2, 0],\r\n    [0, 0, 0, 2, 2, 2, 0],\r\n  ],\r\n  h: [\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 2, 1, 1, 1, 2],\r\n    [1, 1, 1, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 2, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n  M: [\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 1, 2, 0, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 2, 1, 1, 2, 1, 1, 2],\r\n    [1, 1, 2, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n};\r\n\r\nexport default alphabet;\r\n","import { isMobile } from \"functions/isMobile\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface PixelProps {\r\n  x: number;\r\n  y: number;\r\n  pixelsize: number;\r\n  fill: string;\r\n  animationClasses?: string;\r\n  wait?: number;\r\n  ref?: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nexport default function Pixel(props: PixelProps) {\r\n  const { x, y, pixelsize, fill, animationClasses, wait } = props\r\n  const [hidden, setHidden] = useState(props.wait && true);\r\n\r\n  useEffect(() => {\r\n    if (wait) {\r\n      setTimeout(() => {\r\n        setHidden(false);\r\n      }, wait || 0);\r\n      // return () => {\r\n      // \tclearTimeout(timer);\r\n      // }\r\n    }\r\n  });\r\n\r\n  var ref = React.createRef<HTMLDivElement>();\r\n\r\n  // return !hidden ? <rect width=\"1\" height=\"1\" shapeRendering=\"crispEdges\" {...props} /> : <></>;\r\n  return !hidden ? (\r\n    <div\r\n      ref={ref}\r\n      onAnimationEnd={animationClasses ? () => {\r\n        if (ref.current) ref.current.className = \"\";\r\n      } : undefined}\r\n      style={{\r\n        width: pixelsize,//(y * pixelsize).toString() + \"rem\",\r\n        height: pixelsize,//(x * pixelsize).toString() + \"rem\",\r\n        backgroundColor: fill,\r\n        position: \"absolute\",\r\n        paddingTop: y !== 0 ? -pixelsize : 0,\r\n        left: x * pixelsize,//(x * pixelsize).toString() + \"rem\",\r\n        top: y * pixelsize,//(y * pixelsize).toString() + \"rem\",\r\n      }}\r\n      className={animationClasses}\r\n    />\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n","import Pixel from \"./Pixel\";\r\nimport React, { useMemo } from \"react\";\r\n\r\ninterface PixelProps {\r\n  bitmap: number[][];\r\n  pixelsize: number;\r\n  colormap: { [key: number]: string };\r\n  animate?: boolean;\r\n  animationClasses?: string | string[];\r\n  rowDelay?: number;\r\n  rowDelayMaxIncrement?: number;\r\n  random?: boolean;\r\n}\r\n\r\nexport default function PixelBitmap(props: PixelProps) {\r\n  const {\r\n    bitmap,\r\n    pixelsize,\r\n    colormap,\r\n    animationClasses,\r\n    rowDelay,\r\n    rowDelayMaxIncrement,\r\n    random,\r\n    ...other\r\n  } = props;\r\n  const rows = bitmap.length;\r\n  const columns = bitmap[0].length;\r\n  const width = columns * pixelsize;\r\n  const height = rows * pixelsize;\r\n  const content = useMemo(() => {\r\n    var delay = rowDelay && rowDelay !== 0 ? 1 + rowDelay : 0;\r\n    return (\r\n      <div\r\n        style={{ width: width, height: height, position: \"relative\" }}\r\n        {...other}\r\n      >\r\n        {bitmap.map((row: number[], rowIndex: number) => {\r\n          return row.map((bit: number, index: number) => {\r\n            if (rowDelay) {\r\n              if (random) {\r\n                var increment = (rowDelayMaxIncrement ? rowDelayMaxIncrement : 1) * Math.random()\r\n                delay = rowDelay + increment;\r\n              } else {\r\n                delay += rowDelay;\r\n              }\r\n            }\r\n            var animationClasses2 = Array.isArray(animationClasses)\r\n              ? animationClasses[\r\n                  Math.floor(Math.random() * animationClasses.length)\r\n                ]\r\n              : animationClasses;\r\n            return (\r\n              <Pixel\r\n                key={index}\r\n                x={index}\r\n                y={rowIndex}\r\n                pixelsize={pixelsize}\r\n                fill={colormap[bit]}\r\n                wait={delay}\r\n                animationClasses={\r\n                  animationClasses && \"animate__animated \" + animationClasses2\r\n                }\r\n              />\r\n            );\r\n          });\r\n        })}\r\n      </div>\r\n    );\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return content;\r\n}\r\n","import { Grid } from \"@material-ui/core\";\r\nimport alphabet from \"../graphics/bitmaps/alphabetMap\";\r\nimport PixelBitmap from \"./PixelBitmap\";\r\n\r\nexport interface PixelWordProps {\r\n\tword: string;\r\n\tupperCaseSize: number;\r\n\tlowerCaseSize: number;\r\n\tcolorMap: {[key: number]: string};\r\n\tanimationClasses?: string[];\r\n\trowDelay?: number;\r\n\trowDelayMaxIncrement?: number;\r\n\trandom?: boolean;\r\n}\r\n\r\n// const bigLetterSize = 15;\r\n// const smallLetterSize = 8;\r\n\r\nexport default function PixelWord(props: PixelWordProps) {\r\n\tconst { word, upperCaseSize, lowerCaseSize, colorMap, animationClasses, rowDelay, rowDelayMaxIncrement, random } = props;\r\n\r\n  return (\r\n\t\t<>\r\n      {word.split('').map((char: string, index: number) =>\r\n\t\t\t\t<Grid key={index} item className=\"rise-anim\" style={{flexWrap: \"nowrap\"}}>\r\n\t\t\t\t\t<PixelBitmap\r\n\t\t\t\t\t\tbitmap={alphabet[char]}\r\n\t\t\t\t\t\tpixelsize={index === 0 ? upperCaseSize : lowerCaseSize}\r\n\t\t\t\t\t\tcolormap={colorMap}\r\n\t\t\t\t\t\tanimationClasses={animationClasses}\r\n\t\t\t\t\t\trowDelay={rowDelay}\r\n\t\t\t\t\t\trowDelayMaxIncrement={rowDelayMaxIncrement}\r\n\t\t\t\t\t\trandom={random}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n    </>\r\n  );\r\n}\r\n","import { GridSpacing } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useMemo } from \"react\";\r\nimport PixelWord from \"./PixelWord\";\r\n\r\nexport interface PixelSentenceProps {\r\n  sentence: string;\r\n  wordSpacing: GridSpacing;\r\n  letterSpacing: GridSpacing;\r\n  colorMap: {[key: number]: string};\r\n\tupperCaseSize: number;\r\n\tlowerCaseSize: number;\r\n\tanimationClasses?: string[];\r\n\trowDelay?: number;\r\n\trowDelayMaxIncrement?: number;\r\n\trandom?: boolean;\r\n}\r\n\r\nexport default function PixelSentence(props: PixelSentenceProps) {\r\n  const { sentence, wordSpacing, letterSpacing, ...wordProps } = props;\r\n  // colorMap, upperCaseSize, lowerCaseSize, animationClasses, rowDelay, rowDelayMaxIncrement, random } = props;\r\n\r\n  \r\n  const sentenceArr = useMemo(() => {\r\n    return sentence.split(\" \");\r\n  }, [sentence]);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" spacing={wordSpacing}>\r\n      {sentenceArr.map((word, index) => (\r\n        <Grid item key={index}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            spacing={letterSpacing}\r\n            alignItems=\"baseline\"\r\n          >\r\n            <PixelWord {...wordProps} word={word} />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","import { isMobile } from 'functions/isMobile';\r\nimport useIsDarkMode from 'hooks/useIsDarkMode';\r\nimport { CSSProperties } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport PixelSentence from './PixelSentence';\r\n\r\ninterface MyNameProps {\r\n  playAnimation: boolean;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst animations = [\r\n  ['animate__fadeIn'],\r\n  ['animate__fadeInRight', 'animate__fadeInLeft', 'animate__fadeInUp', 'animate__fadeInDown'],\r\n  ['animate__backInDown', 'animate__backInLeft', 'animate__backInRight', 'animate__backInUp']\r\n];\r\n\r\nexport default function MyName(props: MyNameProps) {\r\n  const { playAnimation, style } = props;\r\n  const [animationClasses] = useState(playAnimation ? animations[1] : []);\r\n  const [rowDelay, setRowDelay] = useState(playAnimation ? 1 : 0);\r\n  const [rowDelayMaxIncrement] = useState(rowDelay * 0.1);\r\n  const isDarkMode = useIsDarkMode()\r\n\r\n  var colorMap: { [key: number]: string } ={\r\n    0: \"#00000000\",\r\n    1: isDarkMode ? \"#aaaaaa\" : \"#dddddd\",//theme.palette.type === \"dark\" ? theme.palette.primary.main : theme.palette.primary.light,\r\n    2: isDarkMode ? \"#666666\" : \"#aaaaaa\",//theme.palette.type === \"dark\" ? theme.palette.primary.main : theme.palette.primary.light,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!playAnimation) {\r\n      setTimeout(() => {\r\n        setRowDelay(0);\r\n      }, 2000);\r\n    }\r\n  }, [playAnimation]);\r\n\r\n  const isMobile_ = isMobile();\r\n  const upperCaseSize = isMobile_ ? 3 : 10;\r\n  const lowerCaseSize = isMobile_ ? 1.5 : 5;\r\n  const wordSpacing_ = isMobile_ ? 2 : 10;\r\n  const letterSpacing_ = isMobile_ ? 1 : 2;\r\n\r\n  const animationObj = {\r\n    animationClasses: animationClasses,\r\n    rowDelay: rowDelay,\r\n    rowDelayMaxIncrement: rowDelayMaxIncrement,\r\n    random: false\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20, ...style }}>\r\n      <PixelSentence\r\n        sentence=\"Kenneth Mead\"\r\n        wordSpacing={wordSpacing_}\r\n        letterSpacing={letterSpacing_}\r\n        colorMap={colorMap}\r\n        upperCaseSize={upperCaseSize}\r\n        lowerCaseSize={lowerCaseSize}\r\n        {...animationObj}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nexport default function useIsDarkMode() {\r\n  return useTheme().palette.type === \"dark\";\r\n}","import { isMobile } from \"functions/isMobile\";\r\nimport React from \"react\";\r\n\r\nexport const isMobileContext = React.createContext(isMobile());","import { Tooltip, useTheme } from \"@material-ui/core\";\r\nimport { CSSProperties, useContext, useState } from \"react\";\r\nimport { isMobileContext } from '../context'\r\n// import BrightnessIcon from '@material-ui/icons/Brightness4';\r\n// import BrightnessHighIcon from '@material-ui/icons/Brightness5';\r\n\r\ninterface DarkModeControlProps {\r\n  onClick: Function;\r\n  style?: CSSProperties;\r\n  className?: string;\r\n}\r\n\r\n// const DEFAULT_RADIUS = 96;\r\n\r\nexport default function DarkModeControl(props : DarkModeControlProps) {\r\n  const { onClick, style, className } = props;\r\n  const isMobile: boolean = useContext(isMobileContext)\r\n  const theme = useTheme();\r\n  const [isDarkMode, setIsDarkMode] = useState(theme.palette.type === \"dark\")\r\n\r\n  const handleClick = () => {setIsDarkMode(!isDarkMode); onClick(!isDarkMode)}\r\n\r\n  return (\r\n    <div style={style}>\r\n      {/* <IconButton style={{position: \"absolute\", top: height ? height/2 : DEFAULT_RADIUS/2, left: width ? width/2 : DEFAULT_RADIUS/2, color: \"#00000022\"}}>\r\n        { isDarkMode ? <BrightnessIcon fontSize=\"large\" /> : <BrightnessHighIcon fontSize=\"large\" /> }\r\n      </IconButton> */}\r\n      <Tooltip title=\"Toggle Dark Mode\">\r\n        <img\r\n          src={isDarkMode ? \"images/moon.png\" : \"images/sun-1080.png\"}\r\n          alt=\"Dark Mode Controller\"\r\n          width={isMobile ? 48 : 96}\r\n          height={isMobile ? 48 : 96}\r\n          style={{ cursor: \"pointer\" }}\r\n          className={className}\r\n          onClick={handleClick}\r\n        />\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport DarkModeControl from './DarkModeControl';\r\nimport { isMobileContext } from \"../context\";\r\n\r\ninterface ControlsProps {\r\n  darkMode: boolean;\r\n  setDarkMode: Function;\r\n  hasPixelFont: boolean;\r\n  setHasPixelFont: Function;\r\n}\r\n\r\nexport default function Controls(props: ControlsProps) {\r\n  const { setDarkMode } = props;\r\n  // const [open, setOpen] = useState(false);\r\n  const isMobile_ = useContext(isMobileContext);\r\n\r\n  // const toggleDrawer = (isOpen: boolean) => (event: React.KeyboardEvent | React.MouseEvent) =>\r\n  //   setOpen(isOpen);\r\n\r\n  // const rotationHeight = 2500;\r\n  // const rotationWidth = 2500;\r\n  // const sunDiameter = 96;\r\n\r\n  return (\r\n    <DarkModeControl\r\n      onClick={setDarkMode}\r\n      style={{ position: 'absolute', top: isMobile_ ? 10 : 100, left: isMobile_ ? 10 : \"10%\" }}\r\n      // className=\"spin\"\r\n    />\r\n    // <div style={{ width: '100%', position: 'absolute', overflow: 'hidden', padding: sunDiameter }}>\r\n    //   <div\r\n    //     style={{\r\n    //       position: 'relative',\r\n    //       top: 50,\r\n    //       left: `calc(50% - (${rotationWidth}px / 2))`,\r\n    //       height: rotationHeight,\r\n    //       width: rotationWidth,\r\n    //       transform: 'rotate(0deg)',\r\n    //       // border: '1px solid white',\r\n    //       borderRadius: '50%',\r\n    //       // zIndex: 10,\r\n    //       overflow: 'hidden'\r\n    //     }}\r\n    //     // className=\"spin\"\r\n    //   >\r\n    //     <DarkModeControl\r\n    //       onClick={setDarkMode}\r\n    //       style={{ position: 'absolute', top: 0, left: `calc(50% - (${sunDiameter}px / 2))` }}\r\n    //       // className=\"spin\"\r\n    //     />\r\n    //     {/* <img\r\n    //       src=\"images/sun-1080.png\"\r\n    //       alt=\"Sun\"\r\n    //       width=\"96\"\r\n    //       height=\"96\"\r\n    //       style={{ position: 'absolute', top: 0, left: `calc(50% - (${sunDiameter}px / 2))` }}\r\n    //       // className=\"spin\"\r\n    //     /> */}\r\n    //     {/* <img\r\n    //       src=\"images/sun-1080.png\"\r\n    //       alt=\"Sun\"\r\n    //       width=\"96\"\r\n    //       height=\"96\"\r\n    //       style={{ position: 'absolute', top: rotationHeight-sunDiameter / 2, left: `calc(50% - (${sunDiameter}px / 2))` }}\r\n    //       // className=\"spin\"\r\n    //     />\r\n    //     <img\r\n    //       src=\"images/sun-1080.png\"\r\n    //       alt=\"Sun\"\r\n    //       width=\"96\"\r\n    //       height=\"96\"\r\n    //       style={{ position: 'absolute', top: `calc(50% - (${sunDiameter}px / 2))`, left: -sunDiameter / 2 }}\r\n    //       // className=\"spin\"\r\n    //     />\r\n    //     <img\r\n    //       src=\"images/sun-1080.png\"\r\n    //       alt=\"Sun\"\r\n    //       width=\"96\"\r\n    //       height=\"96\"\r\n    //       style={{ position: 'absolute', top: `calc(50% - (${sunDiameter}px / 2))`, left: rotationWidth-sunDiameter / 2 }}\r\n    //       // className=\"spin\"\r\n    //     /> */}\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n","import { useCookies } from \"react-cookie\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface CookieSetOptions {\r\n  path?: string;\r\n  expires?: Date;\r\n  maxAge?: number;\r\n  domain?: string;\r\n  secure?: boolean;\r\n  httpOnly?: boolean;\r\n  sameSite?: boolean | 'none' | 'lax' | 'strict';\r\n  encode?: (value: string) => string;\r\n}\r\n\r\n/**\r\n * A React hook to manage 1 cookie with typing. Uses {@link https://www.npmjs.com/package/react-cookie/v/4.0.3 react-cookie's} useCookies hook for functionality.\r\n * @param name the name, or key, of the cookie\r\n * @param initialValue the initial value of the cookie. if the cookie is already available for the document, this value is ignored and the available value is used\r\n * @returns the cookie and a cookie setter\r\n */\r\nexport function useCookie(name: string, initialValue: any, options?: CookieSetOptions) {\r\n  const [cookies, setVanillaCookie] = useCookies([name]);\r\n  const [cookie, setInternalCookie] = useState(initialValue);\r\n  const [internalOptions, setInternalOptions] = useState(options);\r\n  \r\n  const setCookie = (newCookie: any) => {\r\n    setVanillaCookie(name, newCookie, internalOptions);\r\n    setInternalCookie(newCookie);\r\n  };\r\n\r\n  const setOptions = (newOptions: CookieSetOptions) => {\r\n    console.log(cookie)\r\n    setVanillaCookie(name, cookie, newOptions);\r\n    setInternalOptions(newOptions);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (CookieAlreadySet(cookies, name)) {\r\n      var typedCookie;\r\n      if (typeof initialValue === 'boolean') {\r\n        typedCookie = !(cookies[name] === 'false') // everything is true except for when cookie === 'false'\r\n      } else if (typeof initialValue === 'number') {\r\n        typedCookie = parseInt(cookies[name])\r\n      } else {\r\n        typedCookie = cookies[name];\r\n      }\r\n      // check if internal cookie needs to match vanilla cookie\r\n      if (typedCookie !== cookie) {\r\n        setCookie(typedCookie); // was cause of an infinite loop before\r\n      }\r\n    } else {\r\n      setVanillaCookie(name, initialValue, options);\r\n    }\r\n  })\r\n\r\n  return [cookie, setCookie, setOptions] as const;\r\n}\r\n\r\n// helper\r\nconst CookieAlreadySet = (cookies: { [name: string]: any }, name: string): boolean => cookies[name] !== undefined\r\n","import { Container, Grid, makeStyles, Theme } from '@material-ui/core';\r\nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\r\nimport Color from 'color';\r\nimport React from 'react';\r\n\r\ninterface IProjectCardContainer {\r\n  style?: CSSProperties;\r\n  onAnimationEnd?: Function;\r\n  children?: JSX.Element[] | JSX.Element;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n  // const isDarkMode = useIsDarkMode();\r\n  return {\r\n    projectCardContainer: {\r\n      backgroundColor: Color(theme.palette.background.default).fade(0.5).toString(),\r\n      padding: '12px 12px 12px 0',\r\n      borderRadius: 25,\r\n      border: `2px solid ${theme.palette.primary.main}`,\r\n      // // /* width */\r\n      // '::-webkit-scrollbar': {\r\n      //   width: '20px'\r\n      // },\r\n      // // /* Track */\r\n      // '::-webkit-scrollbar-track': {\r\n      //   boxShadow: 'inset 0 0 5px grey',\r\n      //   borderRadius: '10px'\r\n      // },\r\n      // // /* Handle */\r\n      // '::-webkit-scrollbar-thumb': {\r\n      //   background: 'red',\r\n      //   borderRadius: '10px'\r\n      // },\r\n      // // /* Handle on hover */\r\n      // '::-webkit-scrollbar-thumb:hover': {\r\n      //   background: '#b30000'\r\n      // },\r\n      overflowY: 'visible',\r\n      overflowX: 'hidden'\r\n    },\r\n    content: {\r\n      padding: '12px 12px 12px 0',\r\n      margin: '12px 0 12px 0',\r\n      minHeight: 400,\r\n      // height: window.innerHeight * 0.7,\r\n      maxHeight: window.innerHeight * 0.7,\r\n      overflowY: 'scroll',\r\n      overflowX: 'hidden',\r\n      zIndex: 10\r\n    },\r\n    rowNumber: {\r\n      width: '2.5rem',\r\n      textAlign: 'center',\r\n      color: '#e8e8e8CC'\r\n    }\r\n  };\r\n});\r\n\r\nexport default function ProjectCardContainer(props: IProjectCardContainer) {\r\n  const { style, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"lg\"\r\n      style={{ ...style }}\r\n      className={classes.projectCardContainer} // + ' hidden-scrollbar'\r\n    >\r\n      <div className={classes.content + ' custom-scrollbar'}>\r\n        <Grid container justifyContent=\"center\" alignItems=\"flex-end\" spacing={4}>\r\n          {React.Children.map(children, (child, index) => {\r\n            return (\r\n              <Grid item xs={12} key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n                <div className={classes.rowNumber}>{index}</div>\r\n                {child}\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import './App.scss';\r\nimport 'animate.css';\r\nimport { Box, IconButton, ThemeProvider, Tooltip, useMediaQuery } from '@material-ui/core';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport ProjectCard from './components/ProjectCard';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport MyName from './components/MyName';\r\nimport Controls from './components/Controls';\r\nimport { useCookie } from 'hooks/useCookie';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport GameJamIcon from '@material-ui/icons/SportsEsports';\r\nimport { neonTheme } from 'themes/neonTheme';\r\nimport ProjectCardContainer from 'components/ProjectCardContainer';\r\n// import ItchIoIcon from './components/icons/ItchIo'\r\n\r\nexport default function App() {\r\n  const [darkMode, setDarkMode] = useCookie(\r\n    'darkMode',\r\n    useMediaQuery('(prefers-color-scheme: dark)'),\r\n    { maxAge: 50000 }\r\n  );\r\n  const [hasPixelFont, setHasPixelFont] = useCookie('hasPixelFont', true);\r\n  const [hideOverflow, setHideOverflow] = useState(false);\r\n  const [playAnimation, setPlayAnimation] = useCookie('playAnimation', true);\r\n  const [hideContent, setHideContent] = useState(playAnimation ? true : false);\r\n\r\n  const theme = useMemo(() => neonTheme(darkMode), [darkMode]);\r\n\r\n  // Entrance animation\r\n  // This is supposed to go off at the same time the name finishes animating\r\n  // It turns of the bool that is hiding the main content, and shrinks a buffer that allows the name to move upwards\r\n  useEffect(() => {\r\n    if (playAnimation) {\r\n      setTimeout(() => {\r\n        setHideContent(false);\r\n        // setPlayAnimationOptions({ maxAge: 5000 });\r\n        setPlayAnimation(false);\r\n      }, 2000);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  if (!hideOverflow) document.body.style.overflowX = 'hidden';\r\n\r\n  document.body.classList.add('hidden-scrollbar');\r\n\r\n  var root = document.getElementById('root');\r\n  root?.classList.add('hidden-scrollbar');\r\n  // var html = document.getElementById('html');\r\n  // if (root) root.style.background = \"linear-gradient(90deg, hsla(216, 76%, 42%, 1) 0%, hsla(214, 41%, 71%, 1) 100%) !important;\";//theme.palette.background.default;\r\n  // if (html) html.style.background = \"linear-gradient(90deg, hsla(216, 76%, 42%, 1) 0%, hsla(214, 41%, 71%, 1) 100%) !important;\";//theme.palette.background.default;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {/*\r\n ██████  ██████  ███    ██ ████████ ██████   ██████  ██      ███████ \r\n██      ██    ██ ████   ██    ██    ██   ██ ██    ██ ██      ██      \r\n██      ██    ██ ██ ██  ██    ██    ██████  ██    ██ ██      ███████ \r\n██      ██    ██ ██  ██ ██    ██    ██   ██ ██    ██ ██           ██ \r\n ██████  ██████  ██   ████    ██    ██   ██  ██████  ███████ ███████ \r\n*/}\r\n      <Controls\r\n        darkMode={darkMode}\r\n        setDarkMode={setDarkMode}\r\n        hasPixelFont={hasPixelFont}\r\n        setHasPixelFont={setHasPixelFont}\r\n      />\r\n\r\n      {/* \r\n  ██████  ██████   ██████       ██ ███████  ██████ ████████ ███████ \r\n  ██   ██ ██   ██ ██    ██      ██ ██      ██         ██    ██      \r\n  ██████  ██████  ██    ██      ██ █████   ██         ██    ███████ \r\n  ██      ██   ██ ██    ██ ██   ██ ██      ██         ██         ██ \r\n  ██      ██   ██  ██████   █████  ███████  ██████    ██    ███████ \r\n  */}\r\n      <Box\r\n        style={{\r\n          height: window.innerHeight,\r\n          padding: 25\r\n        }}\r\n        className={darkMode ? 'night-sky' : 'day-sky'}\r\n      >\r\n        <MyName playAnimation={playAnimation} />\r\n        {!hideContent && (\r\n          <>\r\n            <Box\r\n              className=\"animate__animated animate__fadeInUpBig\"\r\n              onAnimationEnd={() => {\r\n                setHideOverflow(true);\r\n                document.body.style.overflow = 'visible';\r\n              }}\r\n            >\r\n              <Typography variant=\"h3\" align=\"center\" color=\"primary\" style={{ padding: '24px 0' }}>\r\n                Projects\r\n              </Typography>\r\n\r\n              <ProjectCardContainer>\r\n                <ProjectCard\r\n                  repo={{ name: 'Smart-City-Dashboard', owner: 'Jaren-Taylor' }}\r\n                  image={{\r\n                    url: 'images/smart-city-dashboard.png',\r\n                    alt: 'Smart City Dashboard screenshot',\r\n                    title: 'Smart City Dashboard'\r\n                  }}\r\n                  name=\"Smart City Dashboard\"\r\n                  subtitle=\"City Simulation | Senior Project\"\r\n                  chips={['Unity', 'C#', 'Google Maps API', 'Agile', 'Determination']}\r\n                  desc=\"A city builder and simulator with the ability to integrate smart technologies in the city\"\r\n                  iconButtons={[\r\n                    <Tooltip title=\"Itch.io page\" color=\"primary\" arrow>\r\n                      <IconButton\r\n                        style={{ color: theme.palette.primary.light }}\r\n                        href=\"https://mrmeik.itch.io/smart-city-dashboard\"\r\n                      >\r\n                        <GameJamIcon />\r\n                      </IconButton>\r\n                    </Tooltip>,\r\n                    <Tooltip title=\"Github\" color=\"primary\" arrow>\r\n                      <IconButton\r\n                        style={{ color: theme.palette.primary.light }}\r\n                        href=\"https://github.com/Xerner/OU-Game-Jam-2021\"\r\n                      >\r\n                        <GitHubIcon />\r\n                      </IconButton>\r\n                    </Tooltip>,\r\n                    <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                      <IconButton style={{ color: theme.palette.primary.light }}>\r\n                        <ShareIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ]}\r\n                />\r\n\r\n                <ProjectCard\r\n                  repo={{ name: 'steamy-bot', owner: 'Xerner' }}\r\n                  image={{\r\n                    url: 'images/steamy-bot.png',\r\n                    alt: 'Smart City Dashboard screenshot',\r\n                    title: 'Smart City Dashboard'\r\n                  }}\r\n                  name=\"Steamy Bot\"\r\n                  subtitle=\"Discord Bot\"\r\n                  chips={['Test']}\r\n                  desc=\"Yet another Discord music bot that plays songs from youtube\"\r\n                  iconButtons={[\r\n                    <Tooltip title=\"Github\" color=\"primary\" arrow>\r\n                      <IconButton\r\n                        style={{ color: theme.palette.primary.light }}\r\n                        href=\"https://github.com/Xerner/steamy-bot\"\r\n                      >\r\n                        <GitHubIcon />\r\n                      </IconButton>\r\n                    </Tooltip>,\r\n                    <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                      <IconButton style={{ color: theme.palette.primary.light }}>\r\n                        <ShareIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ]}\r\n                />\r\n\r\n                <ProjectCard\r\n                  isPrivate\r\n                  repo={{ name: 'pokebattler', owner: 'Xerner' }}\r\n                  image={{\r\n                    url: 'images/pokemon.png',\r\n                    alt: 'Pokemon screenshot',\r\n                    title: 'Pokemon'\r\n                  }}\r\n                  name=\"Pokemon Battler\"\r\n                  subtitle=\"GameMaker Studio 2\"\r\n                  chips={['Test']}\r\n                  desc=\"An autochess style Pokemon battler with a centralized multiplayer server\"\r\n                  iconButtons={[\r\n                    <Tooltip title=\"Pokebattler Client\" color=\"primary\" arrow>\r\n                      <IconButton\r\n                        style={{ color: theme.palette.primary.light }}\r\n                        href=\"https://github.com/Xerner/pokebattler\"\r\n                      >\r\n                        <GitHubIcon />\r\n                      </IconButton>\r\n                    </Tooltip>,\r\n                    <Tooltip title=\"Pokebattler Server\" color=\"primary\" arrow>\r\n                      <IconButton\r\n                        style={{ color: theme.palette.primary.light }}\r\n                        href=\"https://github.com/Xerner/pokebattler-server\"\r\n                      >\r\n                        <GitHubIcon />\r\n                      </IconButton>\r\n                    </Tooltip>,\r\n                    <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                      <IconButton style={{ color: theme.palette.primary.light }}>\r\n                        <ShareIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ]}\r\n                />\r\n\r\n                <ProjectCard\r\n                  isPrivate\r\n                  repo={{ name: '', owner: 'Xerner' }}\r\n                  image={{\r\n                    url: '',\r\n                    alt: '',\r\n                    title: ''\r\n                  }}\r\n                  name=\"Work Request System\"\r\n                  subtitle=\"Front-End React\"\r\n                  chips={['Test']}\r\n                  desc=\"A mockup front-end work request management system\"\r\n                  iconButtons={[\r\n                    <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                      <IconButton style={{ color: theme.palette.primary.light }}>\r\n                        <ShareIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ]}\r\n                />\r\n\r\n                <ProjectCard\r\n                  isPrivate\r\n                  repo={{ name: '', owner: 'Xerner' }}\r\n                  image={{\r\n                    url: '',\r\n                    alt: '',\r\n                    title: ''\r\n                  }}\r\n                  name=\"Carbon Canister Working Capacity Testing Analysis\"\r\n                  subtitle=\"C# Application\"\r\n                  chips={['Test']}\r\n                  desc=\"Data mining, analysis, and reporting of carbon canister GWC or BWC testing\"\r\n                  iconButtons={[\r\n                    <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                      <IconButton style={{ color: theme.palette.primary.light }}>\r\n                        <ShareIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ]}\r\n                />\r\n\r\n                <ProjectCard\r\n                  isPrivate\r\n                  repo={{ name: '', owner: 'Xerner' }}\r\n                  image={{\r\n                    url: '',\r\n                    alt: '',\r\n                    title: ''\r\n                  }}\r\n                  name=\"Excel Pareto Chart Generator\"\r\n                  subtitle=\"Excel VBA Addin\"\r\n                  chips={['Test']}\r\n                  desc=\"Quick and easy way for an Excel user to generate a Pareto chart with table-structured data\"\r\n                  iconButtons={[\r\n                    <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                      <IconButton style={{ color: theme.palette.primary.light }}>\r\n                        <ShareIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ]}\r\n                />\r\n              </ProjectCardContainer>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        style={{\r\n          height: '1440px'\r\n        }}\r\n        className=\"dirt\"\r\n      >\r\n        {/* \r\n ██████   █████  ███    ███ ███████          ██  █████  ███    ███ ███████ \r\n██       ██   ██ ████  ████ ██               ██ ██   ██ ████  ████ ██      \r\n██   ███ ███████ ██ ████ ██ █████            ██ ███████ ██ ████ ██ ███████ \r\n██    ██ ██   ██ ██  ██  ██ ██          ██   ██ ██   ██ ██  ██  ██      ██ \r\n ██████  ██   ██ ██      ██ ███████      █████  ██   ██ ██      ██ ███████ \r\n*/}\r\n\r\n        <Box>\r\n          <Typography variant=\"h3\" align=\"center\" color=\"primary\" style={{ padding: '4rem 1rem' }}>\r\n            Game Jams\r\n          </Typography>\r\n\r\n          <ProjectCardContainer>\r\n            <ProjectCard\r\n              repo={{ name: 'OU-Game-Jam-2021', owner: 'Xerner' }}\r\n              image={{\r\n                url: 'images/deepspace.png',\r\n                alt: 'Deepspace icon',\r\n                title: 'Deepspace'\r\n              }}\r\n              name=\"Deepspace\"\r\n              subtitle=\"Unity | 48 hour Game Jam!\"\r\n              chips={['Test']}\r\n              desc=\"A daring battle between a space engineer and an evil robot\"\r\n              iconButtons={[\r\n                <Tooltip title=\"Oakland University 2021 Game Jam!\" color=\"primary\" arrow>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    href=\"https://itch.io/jam/ou-winter-2021-game-jam/entries\"\r\n                  >\r\n                    <GameJamIcon />\r\n                  </IconButton>\r\n                </Tooltip>,\r\n                <Tooltip title=\"Github\" color=\"primary\" arrow>\r\n                  <IconButton\r\n                    style={{ color: theme.palette.primary.light }}\r\n                    href=\"https://github.com/Xerner/OU-Game-Jam-2021\"\r\n                  >\r\n                    <GitHubIcon />\r\n                  </IconButton>\r\n                </Tooltip>,\r\n                <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                  <IconButton style={{ color: theme.palette.primary.light }}>\r\n                    <ShareIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              ]}\r\n            />\r\n          </ProjectCardContainer>\r\n        </Box>\r\n        <footer>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Tooltip title=\"My Github\" color=\"primary\" arrow>\r\n                <IconButton href=\"https://github.com/Xerner\">\r\n                  <GitHubIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </footer>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { createTheme } from \"@material-ui/core\";\r\nimport Color from 'color';\r\n\r\nexport const neonTheme = (darkMode: boolean) => createTheme({\r\n  palette: {\r\n    type: darkMode ? 'dark' : 'light',\r\n    primary: {\r\n      light: darkMode ? Color(\"#910BEA\").lighten(0.5).toString() : Color(\"#3F37C9\").lighten(0.25).toString(),//D91CBC\r\n      main: darkMode ? \"#910BEA\" : \"#3F37C9\",//B5179E\r\n      dark: darkMode ? Color(\"#910BEA\").darken(0.5).toString() : Color(\"#3F37C9\").darken(0.25).toString(),\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000'\r\n    },\r\n    text: {\r\n      primary: darkMode ? '#e8e8e8' : \"#000000\"\r\n    }\r\n  }\r\n});\r\n\r\n\r\n\r\n/*\r\ngood night sky color: 073349\r\n*/","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}