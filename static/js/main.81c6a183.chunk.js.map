{"version":3,"sources":["components/ProjectCard.tsx","graphics/bitmaps/alphabetMap.tsx","components/Pixel.tsx","components/PixelBitmap.tsx","components/PixelWord.tsx","components/PixelSentence.tsx","components/MyName.tsx","components/Controls.tsx","hooks/useCookie.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","background","paper","width","borderBottom","type","primary","light","media","title","fontSize","marginBottom","subtitle","ProjectCard","props","name","desc","image","iconButtons","classes","Grid","item","className","Card","CardMedia","component","alt","height","url","style","objectFit","imageFit","Box","paddingTop","Typography","color","align","CardContent","variant","CardActions","undefined","container","justifyContent","alignContent","map","iconButton","alphabet","a","d","K","e","n","t","h","M","Pixel","x","y","pixelsize","fill","animationClasses","wait","useState","hidden","setHidden","useEffect","setTimeout","ref","React","createRef","onAnimationEnd","current","position","left","top","PixelBitmap","bitmap","colormap","rowDelay","rowDelayMaxIncrement","random","other","rows","length","useMemo","delay","row","rowIndex","bit","index","increment","Math","animationClasses2","Array","isArray","floor","PixelWord","word","colorMap","split","char","upperCaseSize","lowerCaseSize","PixelSentence","sentence","wordSpacing","letterSpacing","wordProps","sentenceArr","spacing","alignItems","MyName","playAnimation","setRowDelay","wordObj","animationObj","marginTop","display","drawerPaper","content","flexGrow","default","padding","Controls","darkMode","setDarkMode","hasPixelFont","setHasPixelFont","Drawer","anchor","direction","Tooltip","IconButton","onClick","Button","useCookie","initialValue","options","useCookies","cookies","setVanillaCookie","cookie","setInternalCookie","internalOptions","setInternalOptions","setCookie","newCookie","typedCookie","CookieAlreadySet","parseInt","newOptions","console","log","App","useMediaQuery","maxAge","hideOverflow","setHideOverflow","setPlayAnimation","hideContent","setHideContent","createTheme","main","dark","contrastText","secondary","typography","fontFamily","h3","h5","body1","lineHeight","button","document","body","overflow","getElementById","html","ThemeProvider","CssBaseline","margin","Container","maxWidth","arrow","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2WAsBMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1CC,MAAO,IACPC,aAAa,aAAD,OACa,SAAvBR,EAAMI,QAAQK,KAAkB,SAAWT,EAAMI,QAAQM,QAAQC,QAerEC,MAAO,CACLT,gBAAiB,aAEnBU,MAAO,CACLC,SAAU,GACVC,aAAc,GAEhBC,SAAU,CACRD,aAAc,SAKL,SAASE,EAAYC,GAClC,IAAQC,EAA6CD,EAA7CC,KAAMH,EAAuCE,EAAvCF,SAAUI,EAA6BF,EAA7BE,KAAMC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,YAE/BC,EAAUzB,IAEhB,OACE,cAAC0B,EAAA,EAAD,CAAMC,MAAI,EAACC,UAAU,YAArB,SACE,eAACC,EAAA,EAAD,CAAMD,UAAWH,EAAQrB,KAAzB,UACGmB,EACC,cAACO,EAAA,EAAD,CACEC,UAAU,MACVH,UAAWH,EAAQX,MACnBkB,IAAKT,EAAMS,IACXC,OAAQ,IACRxB,MAAO,IACPc,MAAOA,EAAMW,IACbnB,MAAOQ,EAAMR,MACboB,MAAO,CAACC,UAAWb,EAAMc,SAAWd,EAAMc,SAAW,WAGvD,cAACC,EAAA,EAAD,CAAKH,MAAO,CAAEF,OAAQ,IAAKM,WAAY,IAAvC,SACE,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,MAAM,SAAxC,wBAKJ,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,CAAYZ,UAAWH,EAAQV,MAA/B,SACGM,IAEH,cAACmB,EAAA,EAAD,CAAYZ,UAAWH,EAAQP,SAAUuB,MAAM,gBAA/C,SACGvB,IAEH,cAACsB,EAAA,EAAD,CAAYI,QAAQ,QAAQb,UAAU,IAAtC,SACGT,OAGL,cAACuB,EAAA,EAAD,eACmBC,IAAhBtB,GACC,cAACE,EAAA,EAAD,CAAMqB,WAAS,EAACC,eAAe,WAAWC,aAAa,SAAvD,SACGzB,EAAY0B,KAAI,SAACC,GAAD,OACf,cAACzB,EAAA,EAAD,CAAMC,MAAI,EAAV,SAAYwB,gB,6BCcbC,EA3Ge,CAC5BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EAAG,IAE1BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAErBC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAA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","file":"static/js/main.81c6a183.chunk.js","sourcesContent":["import { Box, CardMedia, Grid, Link, Typography } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\ninterface _props {\r\n  name: string;\r\n  subtitle: string;\r\n  desc: JSX.Element | string;\r\n  width?: number;\r\n  image?: imageProps;\r\n  iconButtons?: JSX.Element[];\r\n}\r\n\r\ninterface imageProps {\r\n  url: string;\r\n  alt?: string;\r\n  title?: string;\r\n  imageFit?: \"fill\" | \"contain\" | \"cover\" | \"none\" | \"scale-down\";\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      width: 300,\r\n      borderBottom: `4px solid ${\r\n        theme.palette.type === 'dark' ? 'purple' : theme.palette.primary.light\r\n      }`\r\n      // boxShadow: `0 5px 0px ${\r\n      //   theme.palette.type === \"dark\"\r\n      //     ? \"rgb(159, 31, 239, 0.6)\"\r\n      //     : \"rgb(0, 0, 0, 0.2)\"\r\n      // } !important`,\r\n      // \"&:hover\": {\r\n      //   boxShadow: `0 8px 15px 3px ${\r\n      //     theme.palette.type === \"dark\"\r\n      //       ? \"rgb(159, 31, 239, 0.6)\"\r\n      //       : \"rgb(0, 0, 0, 0.2)\"\r\n      //   } !important`,\r\n      // },\r\n    },\r\n    media: {\r\n      backgroundColor: \"gainsboro\",\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n      marginBottom: 4,\r\n    },\r\n    subtitle: {\r\n      marginBottom: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ProjectCard(props: _props) {\r\n  const { name, subtitle, desc, image, iconButtons } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item className=\"rise-anim\">\r\n      <Card className={classes.root}>\r\n        {image ? (\r\n          <CardMedia\r\n            component=\"img\"\r\n            className={classes.media}\r\n            alt={image.alt}\r\n            height={140}\r\n            width={300}\r\n            image={image.url}\r\n            title={image.title}\r\n            style={{objectFit: image.imageFit ? image.imageFit : \"cover\"}}\r\n          />\r\n        ) : (\r\n          <Box style={{ height: 140, paddingTop: 70 }}>\r\n            <Typography color=\"textSecondary\" align=\"center\">\r\n              No Image\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <CardContent>\r\n          <Typography className={classes.title}>\r\n            {name}\r\n          </Typography>\r\n          <Typography className={classes.subtitle} color=\"textSecondary\">\r\n            {subtitle}\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {desc}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          {iconButtons !== undefined && (\r\n            <Grid container justifyContent=\"flex-end\" alignContent=\"center\">\r\n              {iconButtons.map((iconButton) => (\r\n                <Grid item>{iconButton}</Grid>\r\n              ))}\r\n            </Grid>\r\n          )}\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","interface IDictionary {\r\n  [index: string]: number[][];\r\n}\r\n\r\nconst alphabet: IDictionary = {\r\n  a: [\r\n    [0, 0, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 2, 1, 1, 2, 0],\r\n    [1, 1, 2, 2, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 0, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 0, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 2, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 0, 2, 2, 2, 2, 2, 2, 2],\r\n  ],\r\n  d: [\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 0, 0, 0, 1, 1, 2, 0],\r\n    [0, 0, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 2, 1, 1, 2, 0],\r\n    [1, 1, 2, 2, 0, 1, 1, 2, 0],\r\n    [1, 1, 1, 2, 0, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 2, 1, 1, 1, 1, 1, 1, 2],\r\n    [0, 0, 2, 2, 2, 2, 2, 2, 2],\r\n  ],\r\n  K: [\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 1, 1, 1, 2],\r\n    [1, 1, 2, 0, 1, 1, 1, 2, 2],\r\n    [1, 1, 2, 1, 1, 1, 2, 2, 0],\r\n    [1, 1, 1, 1, 1, 2, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 2, 0, 0, 0],\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 2, 2, 1, 1, 1, 2, 0],\r\n    [1, 1, 2, 0, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 2, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n  e: [\r\n    [0, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 2, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 2, 0, 2, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 2],\r\n    [1, 1, 2, 2, 2, 2, 2, 2, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [2, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [0, 2, 2, 2, 2, 2, 2, 2, 0],\r\n  ],\r\n  n: [\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 2, 1, 1, 1, 2],\r\n    [1, 1, 2, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2,2, 2],\r\n  ],\r\n  t: [\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 2],\r\n    [2, 2, 1, 1, 2, 2, 2],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 2, 0, 0],\r\n    [0, 0, 1, 1, 1, 2, 0],\r\n    [0, 0, 2, 1, 1, 2, 0],\r\n    [0, 0, 0, 2, 2, 2, 0],\r\n  ],\r\n  h: [\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 2, 1, 1, 1, 2, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 1, 2, 0],\r\n    [1, 1, 1, 1, 2, 1, 1, 1, 2],\r\n    [1, 1, 1, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 2, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n  M: [\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 1, 2, 0, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 2],\r\n    [1, 1, 2, 1, 1, 2, 1, 1, 2],\r\n    [1, 1, 2, 2, 2, 2, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [1, 1, 2, 0, 0, 0, 1, 1, 2],\r\n    [2, 2, 2, 0, 0, 0, 2, 2, 2],\r\n  ],\r\n};\r\n\r\nexport default alphabet;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface PixelProps {\r\n  x: number;\r\n  y: number;\r\n  pixelsize: number;\r\n  fill: string;\r\n  animationClasses?: string;\r\n  wait?: number;\r\n  ref?: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nexport default function Pixel(props: PixelProps) {\r\n  const { x, y, pixelsize, fill, animationClasses, wait } = props\r\n  const [hidden, setHidden] = useState(props.wait && true);\r\n\r\n  useEffect(() => {\r\n    if (wait) {\r\n      setTimeout(() => {\r\n        setHidden(false);\r\n      }, wait || 0);\r\n      // return () => {\r\n      // \tclearTimeout(timer);\r\n      // }\r\n    }\r\n  });\r\n\r\n  var ref = React.createRef<HTMLDivElement>();\r\n\r\n  // return !hidden ? <rect width=\"1\" height=\"1\" shapeRendering=\"crispEdges\" {...props} /> : <></>;\r\n  return !hidden ? (\r\n    <div\r\n      ref={ref}\r\n      onAnimationEnd={animationClasses ? () => {\r\n        if (ref.current) ref.current.className = \"\";\r\n      } : undefined}\r\n      style={{\r\n        width: pixelsize,\r\n        height: pixelsize,\r\n        backgroundColor: fill,\r\n        position: \"absolute\",\r\n        paddingTop: y !== 0 ? -pixelsize : 0,\r\n        left: x * pixelsize,\r\n        top: y * pixelsize,\r\n      }}\r\n      className={animationClasses}\r\n    />\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n","import Pixel from \"./Pixel\";\r\nimport React, { useMemo } from \"react\";\r\n\r\ninterface PixelProps {\r\n  bitmap: number[][];\r\n  pixelsize: number;\r\n  colormap: { [key: number]: string };\r\n  animate?: boolean;\r\n  animationClasses?: string | string[];\r\n  rowDelay?: number;\r\n  rowDelayMaxIncrement?: number;\r\n  random?: boolean;\r\n}\r\n\r\nexport default function PixelBitmap(props: PixelProps) {\r\n  const {\r\n    bitmap,\r\n    pixelsize,\r\n    colormap,\r\n    animationClasses,\r\n    rowDelay,\r\n    rowDelayMaxIncrement,\r\n    random,\r\n    ...other\r\n  } = props;\r\n  const rows = bitmap.length;\r\n  const columns = bitmap[0].length;\r\n  const width = columns * pixelsize;\r\n  const height = rows * pixelsize;\r\n  const content = useMemo(() => {\r\n    var delay = rowDelay && rowDelay !== 0 ? 1 + rowDelay : 0;\r\n    return (\r\n      <div\r\n        style={{ width: width, height: height, position: \"relative\" }}\r\n        {...other}\r\n      >\r\n        {bitmap.map((row: number[], rowIndex: number) => {\r\n          return row.map((bit: number, index: number) => {\r\n            if (rowDelay) {\r\n              if (random) {\r\n                var increment = (rowDelayMaxIncrement ? rowDelayMaxIncrement : 1) * Math.random()\r\n                delay = rowDelay + increment;\r\n              } else {\r\n                delay += rowDelay;\r\n              }\r\n            }\r\n            var animationClasses2 = Array.isArray(animationClasses)\r\n              ? animationClasses[\r\n                  Math.floor(Math.random() * animationClasses.length)\r\n                ]\r\n              : animationClasses;\r\n            return (\r\n              <Pixel\r\n                key={index}\r\n                x={index}\r\n                y={rowIndex}\r\n                pixelsize={pixelsize}\r\n                fill={colormap[bit]}\r\n                wait={delay}\r\n                animationClasses={\r\n                  animationClasses && \"animate__animated \" + animationClasses2\r\n                }\r\n              />\r\n            );\r\n          });\r\n        })}\r\n      </div>\r\n    );\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return content;\r\n}\r\n","import { Grid } from \"@material-ui/core\";\r\nimport alphabet from \"../graphics/bitmaps/alphabetMap\";\r\nimport PixelBitmap from \"./PixelBitmap\";\r\n\r\nexport interface PixelWordProps {\r\n\tword: string;\r\n\tcolorMap: {[key: number]: string};\r\n\tupperCaseSize: number;\r\n\tlowerCaseSize: number;\r\n\tanimationClasses?: string[];\r\n\trowDelay?: number;\r\n\trowDelayMaxIncrement?: number;\r\n\trandom?: boolean;\r\n}\r\n\r\n// const bigLetterSize = 15;\r\n// const smallLetterSize = 8;\r\n\r\nexport default function PixelWord(props: PixelWordProps) {\r\n\tconst { word, colorMap, animationClasses, rowDelay, rowDelayMaxIncrement, random } = props;\r\n\r\n  return (\r\n\t\t<>\r\n      {word.split('').map((char: string, index: number) =>\r\n\t\t\t\t<Grid key={index} item>\r\n\t\t\t\t\t<PixelBitmap\r\n\t\t\t\t\t\tbitmap={alphabet[char]}\r\n\t\t\t\t\t\tpixelsize={index === 0 ? props.upperCaseSize : props.lowerCaseSize}\r\n\t\t\t\t\t\tcolormap={colorMap}\r\n\t\t\t\t\t\tanimationClasses={animationClasses}\r\n\t\t\t\t\t\trowDelay={rowDelay}\r\n\t\t\t\t\t\trowDelayMaxIncrement={rowDelayMaxIncrement}\r\n\t\t\t\t\t\trandom={random}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n    </>\r\n  );\r\n}\r\n","import { GridSpacing } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useMemo } from \"react\";\r\nimport PixelWord, { PixelWordProps } from \"./PixelWord\";\r\n\r\nexport interface PixelSentenceProps {\r\n  sentence: string;\r\n  wordSpacing: GridSpacing;\r\n  letterSpacing: GridSpacing;\r\n  colorMap: {[key: number]: string};\r\n\tupperCaseSize: number;\r\n\tlowerCaseSize: number;\r\n\tanimationClasses?: string[];\r\n\trowDelay?: number;\r\n\trowDelayMaxIncrement?: number;\r\n\trandom?: boolean;\r\n}\r\n\r\nexport default function PixelSentence(props: PixelSentenceProps) {\r\n  const { sentence, wordSpacing, letterSpacing, ...wordProps } = props;\r\n  // colorMap, upperCaseSize, lowerCaseSize, animationClasses, rowDelay, rowDelayMaxIncrement, random } = props;\r\n\r\n  \r\n  const sentenceArr = useMemo(() => {\r\n    return sentence.split(\" \");\r\n  }, [sentence]);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" spacing={wordSpacing}>\r\n      {sentenceArr.map((word, index) => (\r\n        <Grid item key={index}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            spacing={letterSpacing}\r\n            alignItems=\"baseline\"\r\n          >\r\n            <PixelWord {...wordProps} word={word} />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PixelSentence from \"./PixelSentence\";\r\n\r\nconst colorMap: { [key: number]: string } = {\r\n  0: \"#00000000\",\r\n  1: \"#5f5fc4\",\r\n  2: \"#001064\",\r\n};\r\n\r\ninterface MyNameProps {\r\n  playAnimation: boolean;\r\n}\r\n\r\nexport default function MyName(props: MyNameProps) {\r\n  const { playAnimation } = props;\r\n  const [animationClasses] = useState(\r\n    playAnimation\r\n      ? [\r\n          \"animate__fadeInRight\",\r\n          \"animate__fadeInLeft\",\r\n          \"animate__fadeInUp\",\r\n          \"animate__fadeInDown\",\r\n        ]\r\n      : []\r\n  );\r\n  const [rowDelay, setRowDelay] = useState(playAnimation ? 1 : 0);\r\n  const [rowDelayMaxIncrement] = useState(rowDelay * 0.1);\r\n\r\n  useEffect(() => {\r\n    if (!playAnimation) {\r\n      setTimeout(() => {\r\n        setRowDelay(0);\r\n      }, 2000);\r\n    }\r\n  }, [playAnimation]);\r\n  \r\n  const wordObj = {\r\n    colorMap: colorMap,\r\n    upperCaseSize: 10,\r\n    lowerCaseSize: 5,\r\n  };\r\n\r\n  const animationObj = {\r\n    animationClasses: animationClasses,\r\n    rowDelay: rowDelay,\r\n    rowDelayMaxIncrement: rowDelayMaxIncrement,\r\n    random: false,\r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop: \"3rem\"}}>\r\n\r\n    <PixelSentence\r\n      sentence=\"Kenneth Mead\"\r\n      wordSpacing={10}\r\n      letterSpacing={2}\r\n      {...wordObj}\r\n      {...animationObj}\r\n      />\r\n      </div>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Tooltip,\r\n\tuseTheme,\r\n} from \"@material-ui/core\";\r\nimport BrightnessIcon from \"@material-ui/icons/Brightness4\";\r\nimport BrightnessHighIcon from \"@material-ui/icons/Brightness5\";\r\n\r\ninterface ControlsProps {\r\n  darkMode: boolean;\r\n  setDarkMode: Function;\r\n  hasPixelFont: boolean;\r\n  setHasPixelFont: Function;\r\n}\r\n\r\nconst drawerWidth = \"auto\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Controls(props: ControlsProps) {\r\n  const classes = useStyles();\r\n  const { darkMode, setDarkMode, hasPixelFont, setHasPixelFont } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" anchor=\"left\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n\t\t\t\talignItems=\"center\"\r\n        spacing={1}\r\n\t\t\t\tstyle={{padding: 4}}\r\n      >\r\n        <Grid item>\r\n          <Tooltip title=\"Dark Mode\">\r\n            <IconButton\r\n              aria-label=\"toggle dark mode\"\r\n              onClick={() => setDarkMode(!darkMode)}\r\n            >\r\n              {darkMode ? (\r\n                <BrightnessIcon fontSize=\"large\" />\r\n              ) : (\r\n                <BrightnessHighIcon fontSize=\"large\" />\r\n              )}\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            onClick={() => setHasPixelFont(!hasPixelFont)}\r\n            style={{ width: 64, height: 48 }}\r\n          >\r\n            Font\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Drawer>\r\n  );\r\n\r\n  // {/* <Grid\r\n  // \tcontainer\r\n  // \tstyle={{\r\n  // \t\tposition: \"fixed\",\r\n  // \t\tleft: 0,\r\n  // \t\ttop: 0,\r\n  // \t\tmarginLeft: 8,\r\n  // \t\tmarginTop: 8,\r\n  // \t}}\r\n  // \tspacing={2}\r\n  // >\r\n  // \t<Grid item xs={12}>\r\n  // \t\t<Tooltip title=\"Dark Mode\">\r\n  // \t\t\t<IconButton\r\n  // \t\t\t\taria-label=\"toggle dark mode\"\r\n  // \t\t\t\tonClick={() => setDarkMode(!darkMode)}\r\n  // \t\t\t>\r\n  // \t\t\t\t{darkMode ? (\r\n  // \t\t\t\t\t<BrightnessIcon fontSize=\"large\" />\r\n  // \t\t\t\t) : (\r\n  // \t\t\t\t\t<BrightnessHighIcon fontSize=\"large\" />\r\n  // \t\t\t\t)}\r\n  // \t\t\t</IconButton>\r\n  // \t\t</Tooltip>\r\n  // \t</Grid>\r\n  // \t<Grid item xs={12}>\r\n  // \t\t<Button\r\n  // \t\t\tonClick={() => setHasPixelFont(!hasPixelFont)}\r\n  // \t\t\tstyle={{ width: 64, height: 48 }}\r\n  // \t\t>\r\n  // \t\t\tFont\r\n  // \t\t</Button>\r\n  // \t</Grid>\r\n  // </Grid> */}\r\n}\r\n","import { useCookies } from \"react-cookie\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\n\r\ninterface CookieSetOptions {\r\n  path?: string;\r\n  expires?: Date;\r\n  maxAge?: number;\r\n  domain?: string;\r\n  secure?: boolean;\r\n  httpOnly?: boolean;\r\n  sameSite?: boolean | 'none' | 'lax' | 'strict';\r\n  encode?: (value: string) => string;\r\n}\r\n\r\n/**\r\n * A React hook to manage 1 cookie with typing. Uses {@link https://www.npmjs.com/package/react-cookie/v/4.0.3 react-cookie's} useCookies hook for functionality.\r\n * @param name the name, or key, of the cookie\r\n * @param initialValue the initial value of the cookie. if the cookie is already available for the document, this value is ignored and the available value is used\r\n * @returns the cookie and a cookie setter\r\n */\r\nexport function useCookie(name: string, initialValue: any, options?: CookieSetOptions) {\r\n  const [cookies, setVanillaCookie] = useCookies([name]);\r\n  const [cookie, setInternalCookie] = useState(initialValue);\r\n  const [internalOptions, setInternalOptions] = useState(options);\r\n  \r\n  const setCookie = (newCookie: any) => {\r\n    setVanillaCookie(name, newCookie, internalOptions);\r\n    setInternalCookie(newCookie);\r\n  };\r\n\r\n  const setOptions = (newOptions: CookieSetOptions) => {\r\n    console.log(cookie)\r\n    setVanillaCookie(name, cookie, newOptions);\r\n    setInternalOptions(newOptions);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (CookieAlreadySet(cookies, name)) {\r\n      var typedCookie;\r\n      if (typeof initialValue === 'boolean') {\r\n        typedCookie = !(cookies[name] === 'false') // everything is true except for when cookie === 'false'\r\n      } else if (typeof initialValue === 'number') {\r\n        typedCookie = parseInt(cookies[name])\r\n      } else {\r\n        typedCookie = cookies[name];\r\n      }\r\n      // check if internal cookie needs to match vanilla cookie\r\n      if (typedCookie !== cookie) {\r\n        setCookie(typedCookie); // was cause of an infinite loop before\r\n      }\r\n    } else {\r\n      setVanillaCookie(name, initialValue, options);\r\n    }\r\n  })\r\n\r\n  return [cookie, setCookie, setOptions] as const;\r\n}\r\n\r\n// helper\r\nconst CookieAlreadySet = (cookies: { [name: string]: any }, name: string): boolean => cookies[name] !== undefined\r\n","import './App.scss';\r\nimport 'animate.css';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  createTheme,\r\n  ThemeProvider,\r\n  Tooltip,\r\n  useMediaQuery\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport ProjectCard from './components/ProjectCard';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport MyName from './components/MyName';\r\nimport Controls from './components/Controls';\r\nimport { useCookie } from 'hooks/useCookie';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport GameJamIcon from '@material-ui/icons/SportsEsports';\r\n// import ItchIoIcon from './components/icons/ItchIo'\r\n// const animation = \"animate__fadeInDownBig\";\r\n// const animation = \"animate__slow animate__backInLeft\";\r\n// const animation = \"animate__flip\";\r\n// const animation = \"animate__fadeInBottomLeft\";\r\n// const animation = \"animate__faster animate__flipInY\";\r\n\r\nconst animationDelay = 2000;\r\n\r\nexport default function App() {\r\n  const [darkMode, setDarkMode] = useCookie(\r\n    'darkMode',\r\n    useMediaQuery('(prefers-color-scheme: dark)'),\r\n    { maxAge: 50000 }\r\n  );\r\n  const [hasPixelFont, setHasPixelFont] = useCookie('hasPixelFont', true);\r\n  const [hideOverflow, setHideOverflow] = useState(false);\r\n  const [playAnimation, setPlayAnimation] = useCookie('playAnimation', true);\r\n  const [hideContent, setHideContent] = useState(playAnimation ? true : false);\r\n\r\n  var theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          type: darkMode ? 'dark' : 'light',\r\n          primary: {\r\n            light: '#757ce8',\r\n            main: '#3f50b5',\r\n            dark: '#002884',\r\n            contrastText: '#fff'\r\n          },\r\n          secondary: {\r\n            light: '#ff7961',\r\n            main: '#f44336',\r\n            dark: '#ba000d',\r\n            contrastText: '#000'\r\n          }\r\n        },\r\n        typography: {\r\n          fontFamily: hasPixelFont ? 'Pixelar Regular W01 Regular' : undefined,\r\n          h3: {\r\n            fontSize: hasPixelFont ? '3.75rem' : '3rem' //3rem\r\n          },\r\n          h5: {\r\n            fontSize: hasPixelFont ? '1.875rem' : '1.5rem' //1.5rem\r\n          },\r\n          body1: {\r\n            fontSize: hasPixelFont ? '1.25rem' : '1rem', //1rem\r\n            lineHeight: hasPixelFont ? '1.5rem' : undefined\r\n          },\r\n          button: {\r\n            fontSize: hasPixelFont ? '1.3125rem' : '0.875rem' //0.875rem\r\n          }\r\n        }\r\n      }),\r\n    [darkMode, hasPixelFont]\r\n  );\r\n\r\n  // Entrance animation\r\n  // This is supposed to go off at the same time the name finishes animating\r\n  // It turns of the bool that is hiding the main content, and shrinks a buffer that allows the name to move upwards\r\n  useEffect(() => {\r\n    if (playAnimation) {\r\n      setTimeout(() => {\r\n        setHideContent(false);\r\n        // setPlayAnimationOptions({ maxAge: 5000 });\r\n        setPlayAnimation(false);\r\n      }, 2000);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  if (!hideOverflow) document.body.style.overflow = 'hidden';\r\n\r\n  var root = document.getElementById('root');\r\n  var html = document.getElementById('html');\r\n  if (root) root.style.backgroundColor = theme.palette.background.default;\r\n  if (html) html.style.backgroundColor = theme.palette.background.default;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {/*\r\n ██████  ██████  ███    ██ ████████ ██████   ██████  ██      ███████ \r\n██      ██    ██ ████   ██    ██    ██   ██ ██    ██ ██      ██      \r\n██      ██    ██ ██ ██  ██    ██    ██████  ██    ██ ██      ███████ \r\n██      ██    ██ ██  ██ ██    ██    ██   ██ ██    ██ ██           ██ \r\n ██████  ██████  ██   ████    ██    ██   ██  ██████  ███████ ███████ \r\n*/}\r\n      <Controls\r\n        darkMode={darkMode}\r\n        setDarkMode={setDarkMode}\r\n        hasPixelFont={hasPixelFont}\r\n        setHasPixelFont={setHasPixelFont}\r\n      />\r\n      <Box\r\n        style={{\r\n          overflow: hideOverflow ? 'visible' : 'inherit'\r\n        }}\r\n      >\r\n        {/* <Box className=\"transition\" style={{ height: fillerSize }} /> */}\r\n        <MyName playAnimation={playAnimation} />\r\n        {/* \r\n██████  ██████   ██████       ██ ███████  ██████ ████████ ███████ \r\n██   ██ ██   ██ ██    ██      ██ ██      ██         ██    ██      \r\n██████  ██████  ██    ██      ██ █████   ██         ██    ███████ \r\n██      ██   ██ ██    ██ ██   ██ ██      ██         ██         ██ \r\n██      ██   ██  ██████   █████  ███████  ██████    ██    ███████ \r\n*/}\r\n        {!hideContent && (\r\n          <>\r\n            <Box\r\n              className=\"animate__animated animate__fadeInUpBig\"\r\n              onAnimationEnd={(e) => {\r\n                setHideOverflow(true);\r\n                // e.currentTarget.className = \"\";\r\n                document.body.style.overflow = 'visible';\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h3\"\r\n                align=\"center\"\r\n                color=\"primary\"\r\n                style={{ margin: '4rem 1rem' }}\r\n              >\r\n                Projects\r\n              </Typography>\r\n              <Container maxWidth=\"lg\">\r\n                <Grid container justifyContent=\"center\" alignItems=\"flex-end\" spacing={2}>\r\n                  <ProjectCard\r\n                    image={{\r\n                      url: 'images/smart-city-dashboard.png',\r\n                      alt: 'Smart City Dashboard screenshot',\r\n                      title: 'Smart City Dashboard'\r\n                    }}\r\n                    name=\"Smart City Dashboard\"\r\n                    subtitle=\"Unity | Senior Project\"\r\n                    desc=\"A city builder and simulator with the ability to integrate smart technologies in the city\"\r\n                    iconButtons={[\r\n                      <Tooltip title=\"Itch.io page\" color=\"primary\" arrow>\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          href=\"https://mrmeik.itch.io/smart-city-dashboard\"\r\n                        >\r\n                          <GameJamIcon />\r\n                        </IconButton>\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"Github\" color=\"primary\" arrow>\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          href=\"https://github.com/Xerner/OU-Game-Jam-2021\"\r\n                        >\r\n                          <GitHubIcon />\r\n                        </IconButton>\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                        <IconButton color=\"primary\">\r\n                          <ShareIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    ]}\r\n                  />\r\n\r\n                  <ProjectCard\r\n                    image={{\r\n                      url: 'images/steamy-bot.png',\r\n                      alt: 'Smart City Dashboard screenshot',\r\n                      title: 'Smart City Dashboard',\r\n                      imageFit: 'contain'\r\n                    }}\r\n                    name=\"Steamy Bot\"\r\n                    subtitle=\"Discord Bot\"\r\n                    desc=\"A Discord music bot that plays songs from youtube\"\r\n                    iconButtons={[\r\n                      <Tooltip title=\"Github\" color=\"primary\" arrow>\r\n                        <IconButton color=\"primary\" href=\"https://github.com/Xerner/steamy-bot\">\r\n                          <GitHubIcon />\r\n                        </IconButton>\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                        <IconButton color=\"primary\">\r\n                          <ShareIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    ]}\r\n                  />\r\n\r\n                  <ProjectCard\r\n                    image={{\r\n                      url: 'images/pokemon.png',\r\n                      alt: 'Smart City Dashboard screenshot',\r\n                      title: 'Smart City Dashboard',\r\n                      imageFit: 'cover'\r\n                    }}\r\n                    name=\"Pokemon Battler\"\r\n                    subtitle=\"GameMaker Studio 2\"\r\n                    desc=\"An autochess style Pokemon battler with a centralized multiplayer server \"\r\n                    iconButtons={[\r\n                      <Tooltip title=\"Pokebattler Server\" color=\"primary\" arrow>\r\n                        <IconButton color=\"primary\" href=\"https://github.com/Xerner/pokebattler-server\">\r\n                          <GitHubIcon />\r\n                        </IconButton>\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"Pokebattler Client\" color=\"primary\" arrow>\r\n                        <IconButton color=\"primary\" href=\"https://github.com/Xerner/pokebattler\">\r\n                          <GitHubIcon />\r\n                        </IconButton>\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                        <IconButton color=\"primary\">\r\n                          <ShareIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    ]}\r\n                  />\r\n                </Grid>\r\n              </Container>\r\n            </Box>\r\n            {/* \r\n ██████   █████  ███    ███ ███████          ██  █████  ███    ███ ███████ \r\n██       ██   ██ ████  ████ ██               ██ ██   ██ ████  ████ ██      \r\n██   ███ ███████ ██ ████ ██ █████            ██ ███████ ██ ████ ██ ███████ \r\n██    ██ ██   ██ ██  ██  ██ ██          ██   ██ ██   ██ ██  ██  ██      ██ \r\n ██████  ██   ██ ██      ██ ███████      █████  ██   ██ ██      ██ ███████ \r\n*/}\r\n\r\n            <Box\r\n              className=\"animate__animated animate__fadeInUpBig\"\r\n              onAnimationEnd={(e) => {\r\n                setHideOverflow(true);\r\n                // e.currentTarget.className = \"\";\r\n                document.body.style.overflow = 'visible';\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h3\"\r\n                align=\"center\"\r\n                color=\"primary\"\r\n                style={{ margin: '4rem 1rem' }}\r\n              >\r\n                Game Jams\r\n              </Typography>\r\n\r\n              <Container maxWidth=\"lg\">\r\n                <Grid container justifyContent=\"center\" spacing={2}>\r\n                  <ProjectCard\r\n                    image={{\r\n                      url: 'images/deepspace.png',\r\n                      alt: 'Deepspace icon',\r\n                      title: 'Deepspace',\r\n                      imageFit: 'contain'\r\n                    }}\r\n                    name=\"Deepspace\"\r\n                    subtitle=\"48 hour Game Jam!\"\r\n                    desc=\"A daring battle between a space engineer and an evil robot\"\r\n                    iconButtons={[\r\n                      <Tooltip title=\"Oakland University 2021 Game Jam!\" color=\"primary\" arrow>\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          href=\"https://itch.io/jam/ou-winter-2021-game-jam/entries\"\r\n                        >\r\n                          <GameJamIcon />\r\n                        </IconButton>\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"Github\" color=\"primary\" arrow>\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          href=\"https://github.com/Xerner/OU-Game-Jam-2021\"\r\n                        >\r\n                          <GitHubIcon />\r\n                        </IconButton>\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"Share\" color=\"primary\" arrow>\r\n                        <IconButton color=\"primary\">\r\n                          <ShareIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    ]}\r\n                  />\r\n                </Grid>\r\n              </Container>\r\n            </Box>\r\n            <footer>\r\n              <Grid container justifyContent=\"flex-end\">\r\n                <Grid item>\r\n                  <Tooltip title=\"My Github\" color=\"primary\" arrow>\r\n                    <IconButton\r\n                      href=\"https://github.com/Xerner\"\r\n                    >\r\n                      <GitHubIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n            </footer>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}